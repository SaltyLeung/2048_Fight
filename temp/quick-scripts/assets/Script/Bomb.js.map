{"version":3,"sources":["Bomb.js"],"names":["Bomb","cc","Class","extends","Component","properties","selectedIndex","onLoad","console","log","start","update","dt","onTouchEnd","event","onCollisionStay","other","self","getComponent","Collider","tag","release","module","exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,OAAOC,GAAGC,KAAH,CAAS;AAChBC,aAASF,GAAGG,SADI;;AAGhBC,gBAAY;AACR;;;;;;;;;AASAC,uBAAe,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBQ,KAHI;;AA+BhB;;AAEDC,UAjCiB,oBAiCP;AAACC,gBAAQC,GAAR,CAAY,UAAZ;AAAyB,KAjCnB;AAmChBC,SAnCgB,mBAmCP;AACL;AACA;AACA;AACA;AACH,KAxCe;AAyChBC,UAzCgB,kBAyCTC,EAzCS,EAyCL;AACP;AACH,KA3Ce;AA6ChBC,cA7CgB,sBA6CLC,KA7CK,EA6CE;AACd;AACH,KA/Ce;AAiDhBC,mBAjDgB,2BAiDAC,KAjDA,EAiDOC,IAjDP,EAiDa;AACzBT,gBAAQC,GAAR,CAAY,eAAaO,MAAME,YAAN,CAAmBjB,GAAGkB,QAAtB,EAAgCC,GAAzD;AACA,aAAKd,aAAL,GAAqBU,MAAME,YAAN,CAAmBjB,GAAGkB,QAAtB,EAAgCC,GAArD;AACH,KApDe;AAqDhBC,WArDgB,mBAqDRP,KArDQ,EAqDD,CAEd;AAvDe,CAAT,CAAX;AA0DAQ,OAAOC,OAAP,GAAiBvB,IAAjB","file":"Bomb.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\nvar Bomb = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        /*bombPrefab:{\r\n            default: null,\r\n            type:cc.Prefab\r\n        },\r\n        bombIns:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        */\r\n        selectedIndex: -1\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n   onLoad () {console.log(\"bombshow\");},\r\n\r\n    start () {\r\n        //console.log(\"bombshow\");\r\n        //this.node.on(cc.Node.EventType.TOUCH_END,this.onTouchEnd,this);\r\n        //this.node.on(cc.Node.EventType.TOUCH_MOVE,this.onTouchMove,this);\r\n        //this.node.on(cc.Node.EventType.TOUCH_CANCEL,this.release,this);\r\n    },\r\n    update(dt) {\r\n        //console.log(\"created\");\r\n    },\r\n\r\n    onTouchEnd(event) {\r\n        //this.game.destroyIndex(selectedIndex);\r\n    },\r\n    \r\n    onCollisionStay(other, self) {\r\n        console.log(\"collision \"+other.getComponent(cc.Collider).tag);\r\n        this.selectedIndex = other.getComponent(cc.Collider).tag; \r\n    },\r\n    release(event) {\r\n        \r\n    }\r\n    \r\n});\r\nmodule.exports = Bomb;"]}